<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>