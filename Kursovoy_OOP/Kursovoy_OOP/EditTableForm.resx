<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jgAAAABJRU5ErkJggg==
</value>
  </data>
</root>